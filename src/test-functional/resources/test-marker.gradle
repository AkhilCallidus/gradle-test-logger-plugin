import static org.gradle.api.tasks.testing.TestResult.ResultType.*

tasks.withType(Test) {
    boolean started = false
    def suites = []

    beforeTest { suite ->
        if (suite.className.startsWith('com.adarshr') && !started) {
            started = true
            logger.lifecycle '__START__'
        }
        if (suite.className.startsWith('com.adarshr') && !suites.contains(suite.className)) {
            logger.lifecycle "__SUITE=${suite.className}__"
            suites << suite.className
        }
    }

    afterTest { suite, result ->
        if (suite.className.startsWith('com.adarshr') &&
            result.resultType == SUCCESS && testlogger.showPassed ||
            result.resultType == SKIPPED && testlogger.showSkipped ||
            result.resultType == FAILURE && testlogger.showFailed) {

            logger.lifecycle "__TEST=${suite.className}:${suite.name}__"
        }
    }

    afterSuite { suite, result ->
        if (!suite.parent) {
            logger.lifecycle '__SUMMARY__'
        }
    }

    // Do after evaluate to make sure this listener comes after the plugin's
    afterEvaluate {
        afterSuite { suite, result ->
            if (!suite.parent) {
                logger.lifecycle '__END__'
            }
        }
    }
}
